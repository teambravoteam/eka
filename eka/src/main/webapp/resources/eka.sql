
-- 학원유저(원장용)
CREATE TABLE ACADEMYMANAGER (
	aid				BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	userId			VARCHAR(20) 	NOT NULL,
	userPw			VARCHAR(20) 	NOT NULL,
	name			VARCHAR(20) 	NOT NULL,
	phone			VARCHAR(13) 	NOT NULL,
	ssn				VARCHAR(14) 	NOT NULL,
	regDate			TIMESTAMP		NOT NULL	DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE ACADEMYMANAGER;

-- 학원
CREATE TABLE ACADEMY (  
	aid					BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	addressId			BIGINT			NOT NULL,
	academyCategoryId	BIGINT			NOT NULL,
	name				VARCHAR(20) 	NOT NULL,
	registrationNum		VARCHAR(12) 	NOT NULL, -- 000-00-00000
	detailaddress		VARCHAR(100) 	NOT NULL,	
	CONSTRAINT ACADEMY_academyCategoryId_FK FOREIGN KEY(academyCategoryId) REFERENCES SUBJECTCATEGORY(scid),
	CONSTRAINT ACADEMY_addressId_FK FOREIGN KEY(addressId) REFERENCES CITYADDRESS(cid)
);
insert academy(addressId,academyCategoryId,name,registrationNum,detailaddress) values (1,1,"코리아아이디","12-12-12","마포구 1번지");
DROP TABLE ACADEMY;
-- 주소 객체를 담기위한 쿼리문
SELECT a.cid, b.county, a.city FROM CITYADDRESS a JOIN COUNTYADDRESS b ON a.countyId = b.cid;
-- 카테고리 객체를 담기위한 쿼리문
SELECT a.scid, c.agecate, b.maincate,  a.subjectcate   FROM SUBJECTCATEGORY a JOIN MAINSUBJECTCATEGORY b ON
a.mainCateId = b.mcid JOIN AGECATEGORY c ON c.acid = b.ageCateId;

-- 학원정보를 담기 위한 쿼리문
SELECT a.aid, a.name, a.registrationNum, d.ageCate, c.mainCate, b.subjectCate, f.county, e.city, a.detailaddress FROM ACADEMY a JOIN SUBJECTCATEGORY b 
ON b.scid = a.academyCategoryId JOIN MAINSUBJECTCATEGORY c ON c.mcid = b.mainCateId JOIN AGECATEGORY d ON d.acid = c.ageCateId 
JOIN CITYADDRESS e ON e.cid = a.addressId JOIN COUNTYADDRESS f ON f.cid = e.countyId;


-- 주소 카테고리
CREATE TABLE COUNTYADDRESS(
	cid			BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	county		VARCHAR(10)		NOT NULL
);
INSERT countyaddress(county) values ("서울");

DROP TABLE COUNTYADDRESS;

CREATE TABLE CITYADDRESS(
	cid			BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	countyId	BIGINT 			NOT NULL,
	city		VARCHAR(10)		NOT NULL,
	CONSTRAINT CITYADDRESS_countyId_FK FOREIGN KEY(countyId) REFERENCES COUNTYADDRESS(cid)
);
INSERT cityaddress(countyId, city) values (1, "강남");
 
DROP TABLE CITYADDRESS;


-- 학원 분류 카테고리
CREATE TABLE AGECATEGORY(
	acid		BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	agecate		VARCHAR(10) 	UNIQUE KEY
);
DROP TABLE AGECATEGORY;
INSERT ageCategory(agecate) values("초");

CREATE TABLE MAINSUBJECTCATEGORY(
	mcid		BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	maincate	VARCHAR(10) 	NOT NULL,
	agecate 	VARCHAR(10) 	NOT NULL,
	CONSTRAINT MAINSUBJECTCATEGORY_agecate_FK FOREIGN KEY(agecate) REFERENCES AGECATEGORY(agecate)
); 
INSERT mainSubjectCategory(maincate, ageCateId) values("교과", 1);
DROP TABLE MAINSUBJECTCATEGORY;

CREATE TABLE SUBJECTCATEGORY(
	scid		BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	mainCateId	BIGINT			NOT NULL,
	subjectcate	VARCHAR(10) 	NOT NULL,	
	maincate	VARCHAR(10) 	NOT NULL,
	agecate 	VARCHAR(10) 	NOT NULL,
	CONSTRAINT SUBJECTCATEGORTY_mainCateId_FK FOREIGN KEY(mainCateId) REFERENCES MAINSUBJECTCATEGORY(mcid)
);
INSERT subjectCategory(subjectcate,mainCateId) values("영어",1);
DROP TABLE SUBJECTCATEGORY;

-- 학원 강좌
CREATE TABLE LECTURE(
	lid					BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	academyId			BIGINT		 	NOT NULL,
	name				VARCHAR(30) 	NOT NULL, 
	subject				VARCHAR(10) 	NOT NULL, 
	startLectureTime	TIMESTAMP 		NOT NULL, -- 00:00 ~ 00:00
	finishLectureTime	TIMESTAMP 		NOT NULL, -- 00:00 ~ 00:00
	startLectureDate	DATE		 	NOT NULL, -- 0000/00/00 ~ 0000/00/00
	finishLectureDate	DATE		 	NOT NULL, -- 0000/00/00 ~ 0000/00/00
	lectureDay			CHAR(1)			NOT NULL, -- 0,0,0,0,0,0,0
	price				BIGINT			NOT NULL,
	teacherNames		VARCHAR(20),
	lectureCapacity		BIGINT			NOT NULL DEFUALT 0,
	CONSTRAINT LECTURE_academyId_FK FOREIGN KEY(academyId) REFERENCES ACADEMY(aid)
);
DROP TABLE LECTURE;


-- 학원 강사
CREATE TABLE TEACHER(
	tid				BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	academyId		BIGINT		 	NOT NULL,
	name			VARCHAR(20)		NOT NULL,	
	gender			VARCHAR(5)		NOT NULL,
	phone			VARCHAR(13) 	NOT NULL,
	subject			VARCHAR(20) 	NOT NULL,
	education		VARCHAR(50), 	-- 최종학력
	career			VARCHAR(50), 	-- 경력사항 
	image			VARCHAR(20),
	foreigner		BOOLEAN			NOT NULL DEFAULT false,
	CONSTRAINT TEACHER_academyId_FK FOREIGN KEY(academyId) REFERENCES ACADEMY(aid)
);

DROP TABLE TEACHER;

-- 학원 상담
CREATE TABLE CONSULTING (
	cid					BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	academyId			BIGINT		 	NOT NULL,
	name				VARCHAR(20)		NOT NULL,
	phone				VARCHAR(13) 	NOT NULL,
	consultCategory		VARCHAR(20)		NOT NULL,
	consultContent		VARCHAR(300)	NOT NULL,
	regDate				TIMESTAMP		NOT NULL	DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT CONSULTING_academyId_FK FOREIGN KEY(academyId) REFERENCES ACADEMY(aid)
);
 
DROP TABLE CONSULTING;

-- 학원 상담 카테고리
CREATE TABLE CONSULTINGCATEGORY(
	cid			BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	category	VARCHAR(20)		NOT NULL
);

DROP TABLE CONSULTINGCATEGORY;
 
-- 학원 출석
CREATE TABLE ATTENDANCE (
	aid			BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	studentId	BIGINT		 	NOT NULL,
	checking	CHAR(1)			NOT NULL, -- 출석A, 결석B, 조퇴C, 지각D
	lectureId	BIGINT		 	NOT NULL,
	academyId	BIGINT		 	NOT NULL,
	regDate		TIMESTAMP		NOT NULL	DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT ATTENDANCE_studentId_FK FOREIGN KEY(studentId) REFERENCES STUDENT(sid),
	CONSTRAINT ATTENDANCE_lectureId_FK FOREIGN KEY(lectureId) REFERENCES LECTURE(lid),
	CONSTRAINT ATTENDANCE_academyId_FK FOREIGN KEY(academyId) REFERENCES ACADEMY(aid)
);
DROP TABLE ATTENDANCE;

CREATE TABLE SchoolCategory(
	smid			BIGINT 		PRIMARY KEY AUTO_INCREMENT,
	schoolcate		VARCHAR(20)	NOT NULL
);

CREATE TABLE GradeCategory(
	ssid			BIGINT 		PRIMARY KEY AUTO_INCREMENT,
	schoolcate		VARCHAR(20)	NOT NULL
	gradecate		VARCHAR(20) NOT NULL,
	CONSTRAINT GradeCategory_schoolcate_FK FOREIGN KEY(schoolcate) REFERENCES SchoolCategory(schoolcate)
);

-- 학원생
CREATE TABLE STUDENT(
	sid					BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	academyId			BIGINT			NOT NULL,
	studentCategoryId	BIGINT			NOT NULL,
	name				VARCHAR(20)		NOT NULL,
	gender				VARCHAR(5)		NOT NULL,
	birthDate			DATE			NOT NULL,
	phone				VARCHAR(13) 	NOT NULL,
	ekaSignUp			boolean			NOT NULL DEFAULT FALSE,
	regDate				TIMESTAMP		NOT NULL DEFAULT CURRENT_TIMESTAMP
	CONSTRAINT STUDENT_academyId_FK FOREIGN KEY(academyId) REFERENCES STUDENTSUBCATEGORY(smid),
	CONSTRAINT STUDENT_studentCategoryId_FK FOREIGN KEY(studentCategoryId) REFERENCES ACADEMY(ssid)
);.
DROP TABLE STUDENT;

-- 원생 학부모
CREATE TABLE PARENT(
	pid				BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	gender			VARCHAR(5)		NOT NULL,
	name			VARCHAR(20)		NOT NULL,
	ssn				VARCHAR(14) 	NOT NULL,
	phone			VARCHAR(13) 	NOT NULL,
	studentId		BIGINT 			NOT NULL,
	CONSTRAINT PARENT_studentId_FK FOREIGN KEY(studentId) REFERENCES STUDENT(sid)
);
DROP TABLE PARENT;

-- 시험 카테고리
CREATE TABLE AREACATEGORY( -- 학교, 학원
	acid		BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	name		VARCHAR(20)		NOT NULL
);
DROP TABLE AREACATEGORY;

CREATE TABLE TESTTYPECATEGORY( -- 모의고사, 중간고사, 기말고사, 자체시험
	tcid		BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	name		VARCHAR(20)		NOT NULL,
	areaCateId	BIGINT			NOT NULL,
	CONSTRAINT TESTTYPECATEGORY_areaCateId_FK FOREIGN KEY(areaCateId) REFERENCES AREACATEGORY(acid)
);
DROP TABLE TESTTYPECATEGORY;

CREATE TABLE SUBJECTCATEGORY( -- 모의고사, 중간고사, 기말고사, 자체시험
	scid			BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	name			VARCHAR(20)		NOT NULL,
	testTypeCateId	BIGINT			NOT NULL,
	CONSTRAINT SUBJECTCATEGORY_testTypeCateId_FK FOREIGN KEY(testTypeCateId) REFERENCES TESTTYPECATEGORY(tcid)
);
DROP TABLE SUBJECTCATEGORY;


-- 시험점수
CREATE TABLE SCORE (
	sid					BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	academyId			BIGINT			NOT NULL,
	areaCategory		VARCHAR(20)		NOT NULL,
	testTypeCategory	VARCHAR(20)		NOT NULL,
	subjectCategory		VARCHAR(10)		NOT NULL,
	testScore			DOUBLE			NOT NULL,
	testDate			VARCHAR(20)		NOT NULL, -- 0000/00/00
	studentId			BIGINT 			NOT NULL,
	CONSTRAINT SCORE_academyId_FK FOREIGN KEY(academyId) REFERENCES ACADEMY(aid),
	CONSTRAINT SCORE_studentId_FK FOREIGN KEY(studentId) REFERENCES STUDENT(sid)
);
DROP TABLE SCORE;

-- 학생유저(eka페이지유저)
CREATE TABLE EKAUSER(
	eid				BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	userId			VARCHAR(20) 	NOT NULL,
	userPw			VARCHAR(20) 	NOT NULL,
	name			VARCHAR(20) 	NOT NULL,
	gender			VARCHAR(20) 	NOT NULL,
	ssn				VARCHAR(20) 	NOT NULL,
	phone			VARCHAR(20) 	NOT NULL,
	email			VARCHAR(20) 	NOT NULL,
	regDate			TIMESTAMP		NOT NULL	DEFAULT CURRENT_TIMESTAMP
);
DROP TABLE EKAUSER;

-- 학생유저 별 학원리스트
CREATE TABLE EKAUSERACADEMY(
	euaid			BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	ekaUserId		BIGINT			NOT NULL,
	academyId		BIGINT			NOT NULL,
	CONSTRAINT EKAUSERACADEMY_ekaUserId_FK FOREIGN KEY(ekaUserId) REFERENCES EKAUSER(eid),
	CONSTRAINT EKAUSERACADEMY_academyId_FK FOREIGN KEY(academyId) REFERENCES ACADEMY(aid)
);
DROP TABLE EKAUSERACADEMY;

-- 학생용 학원 찜 목록
CREATE TABLE WISHACADEMY(
	wid				BIGINT 		PRIMARY KEY AUTO_INCREMENT,
	ekaUserId		BIGINT			NOT NULL,
	academyId		BIGINT			NOT NULL,
	CONSTRAINT WISHACADEMY_ekaUserId_FK FOREIGN KEY(ekaUserId) REFERENCES EKAUSER(eid),
	CONSTRAINT WISHACADEMYY_academyId_FK FOREIGN KEY(academyId) REFERENCES ACADEMY(aid)	
);
DROP TABLE WISHACADEMY;
-- 학원리뷰
CREATE TABLE REVIEW (
	rid				BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	academyId		BIGINT 			NOT NULL,
	ekaUserId		BIGINT 			NOT NULL,
	reviewScore		INT				NOT NULL DEFAULT 0,
	comment			VARCHAR(300)	NOT NULL,
	CONSTRAINT REVIEW_ekaUserId_FK FOREIGN KEY(ekaUserId) REFERENCES EKAUSER(eid)
	CONSTRAINT REVIEW_academyId_FK FOREIGN KEY(academyId) REFERENCES ACADEMY(aid)
);
DROP TABLE REVIEW;

-- 결제
CREATE TABLE PAYMENT (
	pid				BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	academyId		BIGINT 			NOT NULL,
	studentId		BIGINT			NOT NULL,
	paymentDesc		VARCHAR(30)		NOT NULL,
	price			INT				NOT NULL,
	accessType		BOOLEAN			NOT NULL DEFAULT false,
	regDate			TIMESTAMP		NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT PAYMENT_academyId_FK FOREIGN KEY(academyId) REFERENCES ACADEMY(aid),
	CONSTRAINT PAYMENT_studentId_FK FOREIGN KEY(studentId) REFERENCES STUDENT(sid)
);
DROP TABLE PAYMENT;

-- 시스템 관리자
CREATE TABLE MANAGER (
	mid				BIGINT 			PRIMARY KEY AUTO_INCREMENT,
	adminId			VARCHAR(20) 	NOT NULL,
	adminPw			VARCHAR(20) 	NOT NULL,
	regDate			TIMESTAMP		NOT NULL	DEFAULT CURRENT_TIMESTAMP
);
DROP TABLE MANAGER;
------공통테이블 end------






